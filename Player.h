#include "DebugText.h"
#include "Input.h"
#include "Model.h"
//#include "PayerBullet.h"
#include "ViewProjection.h"
#include "WorldTransform.h"
#include <assert.h>
#include <list>
#include <memory>
#pragma once


//カメラクラス
class Camera;


class Player {
  public:
	/// <summary>
	/// 初期化
	/// </summary>
	void Initialization(Model* model, uint32_t textureHandle);
	/// <summary>
	/// 更新
	/// </summary>
	void Update();
	/// <summary>
	/// 描画
	/// </summary>
	void Draw(ViewProjection& viewProjection);
	///<summary>
	///ワールド座標を取得
	///< summary>
	Vector3 GetWorldPosition();

	//半径を取得
	float GetRadius() { return r; }

	//ジャンプして衝突したら
	void	UpCollision();

	//側面に当たったら
	void SideCollision();

	void DownCollision();

	//衝突していなかったら
	void OffCollision();

	//カメラセッター
	void SetParent(const WorldTransform* parent) { worldTransform_.parent_ = parent; }

  private:
	//ワールド変換データ
	WorldTransform worldTransform_;
	//モデルデータ
	Model* model_ = nullptr;
	//テクスチャ
	uint32_t textureHandle_ = 0u;
	//入力処理するため
	Input* input_ = nullptr;
	Input* oldinput_ = nullptr;
	//デバックテキスト
	DebugText* debugText_ = nullptr;
	//半径
	const float r = 1.0f;
	//ジャンプ
	float posY;
	float jumpQuantity;
	float minus;

	//タイム
	int putTime;
	int time;


	//フラグ
	bool jumpFlag;
	bool collisionFlag;
	

	Vector3 oldTransform;

	//カメラクラス
	Camera* camera_ = nullptr;

};